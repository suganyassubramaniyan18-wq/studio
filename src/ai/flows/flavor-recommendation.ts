// This is an autogenerated file from running `firebase genkit:flow`.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for recommending ice cream flavors based on user preferences.
 *
 * - recommendFlavor - A function that takes user flavor preferences as input and returns an ice cream flavor recommendation.
 * - FlavorRecommendationInput - The input type for the recommendFlavor function.
 * - FlavorRecommendationOutput - The return type for the recommendFlavor function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FlavorRecommendationInputSchema = z.object({
  preferences: z
    .string()
    .describe(
      'A description of the user preferences, including flavors they like, combinations they have enjoyed, or any other relevant information.'
    ),
});
export type FlavorRecommendationInput = z.infer<typeof FlavorRecommendationInputSchema>;

const FlavorRecommendationOutputSchema = z.object({
  recommendation: z
    .string()
    .describe('The recommended ice cream flavor based on the user preferences.'),
  reasoning: z
    .string()
    .describe('The reasoning behind the recommended flavor, explaining why it matches the user preferences.'),
});
export type FlavorRecommendationOutput = z.infer<typeof FlavorRecommendationOutputSchema>;

export async function recommendFlavor(input: FlavorRecommendationInput): Promise<FlavorRecommendationOutput> {
  return recommendFlavorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'flavorRecommendationPrompt',
  input: {schema: FlavorRecommendationInputSchema},
  output: {schema: FlavorRecommendationOutputSchema},
  prompt: `You are an expert ice cream flavor recommender.

  Based on the user's preferences, recommend an ice cream flavor that they might enjoy.  Explain your reasoning.

  User Preferences: {{{preferences}}}
  `,
});

const recommendFlavorFlow = ai.defineFlow(
  {
    name: 'recommendFlavorFlow',
    inputSchema: FlavorRecommendationInputSchema,
    outputSchema: FlavorRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
